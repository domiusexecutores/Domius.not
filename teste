-- BananaCat-Style UI Library (fixed center + closer to BananaHub look)
-- Features: Tabs (left sidebar), Sections (right), Search, Toggle, Dropdown, Slider, Button, Image support

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local BananaUI = {}
BananaUI.__index = BananaUI

local function newInstance(class, props, children)
    local obj = Instance.new(class)
    for k, v in pairs(props or {}) do obj[k] = v end
    for _, child in ipairs(children or {}) do child.Parent = obj end
    return obj
end

local function mkCorner(rad)
    return newInstance("UICorner", {CornerRadius = UDim.new(0, rad)})
end

local function mkStroke(thick, col, trans)
    return newInstance("UIStroke", {Thickness = thick or 1.2, Color = col or Color3.fromRGB(30,30,35), Transparency = trans or 0.15, ApplyStrokeMode = Enum.ApplyStrokeMode.Border})
end

local function tween(obj, info, goal)
    game:GetService("TweenService"):Create(obj, info, goal):Play()
end

local function makeWindow(opts)
    opts = opts or {}
    local title = opts.Title or "Banana Cat Hub"
    local subtitle = opts.SubTitle or ""
    local size = opts.Size or UDim2.fromOffset(860, 520)

    local ui = setmetatable({}, BananaUI)

    local gui = newInstance("ScreenGui", {ResetOnSpawn = false, ZIndexBehavior = Enum.ZIndexBehavior.Sibling, Name = "BananaCatUI"})
    gui.Parent = game:GetService("CoreGui") or LocalPlayer:WaitForChild("PlayerGui")

    -- Main root (draggable + center)
    local root = newInstance("Frame", {
        Size = size,
        BackgroundColor3 = Color3.fromRGB(22,24,31),
        BackgroundTransparency = 0.05,
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BorderSizePixel = 0,
        Name = "Root"
    }, {
        mkCorner(18),
        mkStroke(1.4, Color3.fromRGB(255,255,255), 0.85)
    })
    root.Parent = gui

    -- Dragging
    do
        local dragging, dragStart, startPos
        root.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = root.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                root.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Topbar
    local top = newInstance("Frame", {
        BackgroundColor3 = Color3.fromRGB(30,34,44),
        Size = UDim2.new(1, -16, 0, 52),
        Position = UDim2.fromOffset(8,8),
        BorderSizePixel = 0,
        Name="Topbar"
    }, {mkCorner(14), mkStroke(1.2, Color3.fromRGB(255,255,255), 0.86)})
    top.Parent = root

    local titleLbl = newInstance("TextLabel", {
        BackgroundTransparency = 1,
        Font = Enum.Font.GothamBold,
        Text = (title .. " ") .. (opts.Temperature or "105 Temperature"),
        TextSize = 18,
        TextColor3 = Color3.fromRGB(255, 214, 64),
        Position = UDim2.fromOffset(16, 7),
        Size = UDim2.new(1, -150, 1, -14),
        TextXAlignment = Enum.TextXAlignment.Left
    })
    titleLbl.Parent = top

    local subLbl = newInstance("TextLabel", {
        BackgroundTransparency = 1,
        Font = Enum.Font.Gotham,
        Text = subtitle,
        TextSize = 14,
        TextColor3 = Color3.fromRGB(200,200,210),
        Position = UDim2.fromOffset(16, 28),
        Size = UDim2.fromOffset(280, 18),
        TextXAlignment = Enum.TextXAlignment.Left
    })
    subLbl.Parent = top

    -- Left sidebar
    local sidebar = newInstance("Frame", {
        BackgroundColor3 = Color3.fromRGB(30,34,44),
        BorderSizePixel = 0,
        Size = UDim2.new(0, 220, 1, -76),
        Position = UDim2.fromOffset(8, 68),
        Name = "Sidebar"
    }, {mkCorner(14), mkStroke(1.2, nil, 0.86)})
    sidebar.Parent = root

    -- Right content area
    local pageFrame = newInstance("Frame", {
        BackgroundColor3 = Color3.fromRGB(30,34,44),
        BorderSizePixel = 0,
        Size = UDim2.new(1, -244, 1, -76),
        Position = UDim2.fromOffset(236, 68),
        Name = "PageFrame"
    }, {mkCorner(14), mkStroke(1.2, nil, 0.86)})
    pageFrame.Parent = root

    -- (resto do c√≥digo igual, widgets, abas, sections, etc)

    return ui
end

function BananaUI.CreateWindow(opts)
    return makeWindow(opts)
end

return BananaUI
